
# Project 3: IPC README file

## Project Description
The purpose of this project is to implement a proxy file transfer server that utilizes a smart cache for performance improvements. The proxy server uses the GETFILE library when communicating with the client and the Libcurl library (specifically the HTTP "easy" implementation) when communication with the file server.

## Implementation
### Part 1 - Proxy Server Only
This implementation of the proxy server begins by registering the handle "handle_with_curl" in the GETFILE server. This handler is called when requests are received from the client and performs the following steps:

1. Request the HTTP header for the file to check for errors and to get the file size
    - This is done using the function "getFileSize" defined in the header file "proxy-student.h". This function sets the curl handle options to only have the header file sent over, then it determines the file size from the "Content Length" field. If there are errors, error values are returned. If there are no errors, the file size is returned. 
2. Reply to client
    - This is done in "handle_with_curl". If "getFileSize" returned a -1, an error occurred and the client is sent a response with the GF_ERROR status and "handle_with_curl" returns a -1. If -2 is returned, the file was not found and the client is sent a response with the GF_FILE_NOT_FOUND status and "handle_with_curl" returns a -1. For all other return values, the file size is sent in the response to the client with the GF_OK status.
3. Transfer the File
    - This is done in the function "transferFile". It is called from "handle_with_curl" if the file size was able to be determined without error. This function sets the easy curl options so that the body and no header for the file are returned. It also sets the write function for the curl handle to be the function "write_data". Once the options have been set, the easy curl is performed which will call "write_data". In "write_data", "gfs_send" is called using the correct GETFILE context until all of the data in the "buffer" is sent to the client. Supports chunking during the "gfs_send" loop. The correct context is managed by using a custom structure called "writeinfo_t" that holds a gfcontext and url. It is created in "handle_with_curl" and given to "transferFile" to hand to the curl handle for use in the write function, "write_data".

### Part 2 - Smart Cache


## Problems, Tests, and Improvements
### Part 1

- I had a hang up with figuring out the file size prior do the download in order to respond to the client, but after having the HTTP header print to the console, and looking at the values for different scenarios, I found a system that works.
- I also struggled with Bonnie at first with getting the generic "something didn't happen right" error on transfers, but I consulted Piazza and found it was an issue with my URL.
- If I were to improve my design, I would do more error checking and create better error messages for security and troubleshooting sake.
- I thought the documentation was clear but I continue to be frustrated with Bonnie. Since I can't really debug with Bonnie (sometimes there's not proxy console output, I can't control the return codes, etc.), I find myself having to submit code that I know is wrong just to try to get something different in the results to point me in the right direction. Because of that, having a 10 submission limit per 24 hours is a massive pain.

We will manually review your file looking for:

- A summary description of your project design.  If you wish to use grapics, please simply use a URL to point to a JPG or PNG file that we can review

- Any additional observations that you have about what you've done. Examples:
	- __What created problems for you?__
	- __What tests would you have added to the test suite?__
	- __If you were going to do this project again, how would you improve it?__
	- __If you didn't think something was clear in the documentation, what would you write instead?__

## Known Bugs/Issues/Limitations

__Please tell us what you know doesn't work in this submission__

## References

__Please include references to any external materials that you used in your project__

